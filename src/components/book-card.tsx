// src/components/book-card.tsx
import Link from 'next/link';
import Image from 'next/image';
// Import the ExternalLink icon
import { BookText, ExternalLink } from 'lucide-react';

// Define the Book interface - MUST match the structure generated by the script
export interface Book {
  id: string; // Unique ID for React keys (e.g., base filename)
  title: string;
  author: string;
  year?: number;
  coverImageUrl?: string; // Optional local cover image URL (e.g., /covers/...)
  pdfUrl: string;         // The full external URL to the PDF (e.g., Mega link)
}

interface BookCardProps {
  book: Book;
}

export function BookCard({ book }: BookCardProps) {
  // --- Defensive Check ---
  if (!book || !book.pdfUrl) {
    if (process.env.NODE_ENV === 'development') {
      console.warn(`BookCard received book without valid pdfUrl:`, book);
    }
    return null; // Render nothing
  }
  // --- End Defensive Check ---

  const pdfLinkHref = book.pdfUrl;

  // --- Construct Libgen Search URL ---
  // Use Title, Author, and Year for a more specific search
  const searchTermParts = [book.title];
  // Add author and year if they exist
  if (book.author) {
      searchTermParts.push(book.author);
  }
  if (book.year) {
    searchTermParts.push(book.year.toString());
  }
  const searchTerm = searchTermParts.join(' ').trim();
  const encodedSearchTerm = encodeURIComponent(searchTerm);
  const libgenUrl = `https://libgen.is/search.php?&req=${encodedSearchTerm}&phrase=1&view=simple&column=def&sort=extension&sortmode=ASC`;
  // --- End Libgen URL Construction ---

  return (
    // Use a div as the main container instead of a Link
    <div className="group border rounded-lg shadow-sm hover:shadow-md transition-shadow duration-200 bg-card text-card-foreground overflow-hidden flex flex-col h-full relative">

      {/* Link wrapping the image and main text content, excluding the Libgen link */}
      <Link href={pdfLinkHref} target="_blank" rel="noopener noreferrer" className="block flex flex-col flex-grow">
        {/* Image Container */}
        <div className="relative w-full aspect-square bg-muted overflow-hidden">
          {book.coverImageUrl ? (
            <Image
              src={book.coverImageUrl}
              alt={`Cover for ${book.title}`}
              fill
              sizes="(max-width: 640px) 50vw, (max-width: 768px) 33vw, (max-width: 1024px) 25vw, 20vw"
              className="object-cover transition-transform duration-300 group-hover:scale-105"
              priority={false}
            />
          ) : (
            <div className="absolute inset-0 flex items-center justify-center text-muted-foreground">
               <BookText className="h-1/3 w-1/3 opacity-50" />
            </div>
          )}
        </div>

        {/* Text Content Area */}
        <div className="p-3 flex flex-col flex-grow">
          {/* Top section for Title and Author - make this grow to push year/libgen down */}
          <div className="mb-2 flex-grow">
            <h3 className="font-semibold text-sm leading-tight mb-1 line-clamp-3 group-hover:line-clamp-none">
              {book.title}
            </h3>
            <p className="text-xs text-muted-foreground truncate">
              {book.author}
            </p>
          </div>
        </div>
      </Link> {/* End of the main content link */}

      {/* Bottom section for Year and Libgen Link - Positioned outside the main Link */}
      {/* Use padding matching the text content area (p-3) but only horizontal (px-3) and bottom (pb-3) */}
      <div className="px-3 pb-3 pt-1 flex justify-between items-baseline">
        {/* Year (Left Side, conditional) */}
        {book.year && (
          <p className="text-xs text-muted-foreground"> {/* Display year */}
            {book.year}
          </p>
        )}
        {/* If year is missing, add a placeholder div to keep justify-between working correctly */}
        {!book.year && <div />}

        {/* Libgen Link (Right Side) - Now it's not nested inside another link */}
        <a
          href={libgenUrl}
          target="_blank"
          rel="noopener noreferrer"
          className="inline-flex items-center text-xs text-blue-600 hover:text-blue-800 hover:underline z-10" // z-10 might not be needed anymore, but keep relative if needed for other styling
          title={`Search "${searchTerm}" on Libgen`} // Add a helpful title attribute
        >
          Search Libgen
          <ExternalLink className="ml-1 h-3 w-3" /> {/* Icon */}
        </a>
      </div>
    </div> // End of the main container div
  );
}
